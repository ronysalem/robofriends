{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","_ref","name","email","id","react_default","a","createElement","className","alt","src","concat","CardList","robots","map","user","i","components_Card","key","SearchBox","searchfiled","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","error","info","setState","Component","App","onSearchChange","event","searchfield","target","value","_this2","fetch","then","response","json","users","_this$state","filteredRobots","filter","robot","toLowerCase","includes","length","components_SearchBox","components_Scroll","ErrorBoundry","components_CardList","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","src_containers_App","document","getElementById"],"mappings":"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","file":"static/js/main.5df72903.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({name , email , id}) =>{\r\n   \r\n    return (\r\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img alt ='robots' src={`https://robohash.org/${id}?200x200`} />\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email} </p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nconst CardList = ({robots}) => {\r\n\r\n    return (\r\n        <div>\r\n           {\r\n           robots.map((user,i) => {\r\n            return( \r\n             <Card  key= {robots[i].id}\r\n                     id={robots[i].id} \r\n                     name={robots[i].name} \r\n                    email={robots[i].email}\r\n             />\r\n                  );\r\n            })\r\n         }\r\n    \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from \"react\";\r\n\r\nconst SearchBox = ({searchfiled,searchChange}) => {\r\n    return (\r\n        <div className=\"pa2\">\r\n            <input\r\n            className=\"pa3 ba b--green bg-lightest-blue\"\r\n                type='search'\r\n                placeholder=\"search robots\" \r\n                onChange={searchChange}\r\n            />\r\n        </div>\r\n\r\n    );\r\n}\r\nexport default SearchBox;","import React from \"react\";\r\n\r\nconst Scroll = (props) => {\r\n    // console.log(props)\r\n    return (\r\n        <div style={{overflowY: 'scroll' , border:'5px solid black', height:'800px'}}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Scroll;","import React ,{Component} from \"react\";\r\n\r\nclass ErrorBoundary extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n           hasError:false \r\n        }\r\n    }\r\n\r\n    componentDidCatch(error,info){\r\n        this.setState({hasError: true})\r\n    }\r\n\r\n    render(){\r\n        if(this.state.hasError){\r\n            return <h1>Ooooooops. That is not good</h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","import React,{ Component } from \"react\";\r\nimport CardList from \"../components/CardList\";\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundary from \"../components/ErrorBoundry\";\r\nimport  './App.css';\r\n\r\n\r\n\r\n\r\nclass App extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            robots:[],\r\n            searchfield:''\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n        .then(response => response.json())\r\n        .then(users => {this.setState({robots:users})})\r\n\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({searchfield: event.target.value})\r\n\r\n        }\r\n    \r\n\r\n    render() {\r\n        // destructuring from the state\r\n        const{robots,searchfield}=this.state;\r\n        const filteredRobots= robots.filter(robot =>{\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n        }) \r\n        // terinary operator\r\n        return !robots.length ? <h1>Loading</h1> :\r\n            (\r\n                <div className=\"tc\">\r\n                    <h1 className=\"f1\">RoboFriends</h1>\r\n                     <SearchBox searchChange={this.onSearchChange} />\r\n                     <Scroll>\r\n                        <ErrorBoundary>\r\n                     <CardList robots={filteredRobots}/>\r\n                     </ErrorBoundary>\r\n                     </Scroll>\r\n                </div>\r\n               \r\n            );\r\n        }\r\n\r\n    \r\n\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App'\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(<App/>, document.getElementById('root'));\n  \n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}